Step: build-step-credential-initializer:

{"level":"warn","ts":1554658970.5551162,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1554658970.5566118,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-0:

{"level":"warn","ts":1554658971.3379157,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1554658972.6345499,"logger":"fallback-logger","caller":"git-init/main.go:92","msg":"Successfully cloned \"https://github.com/carlossg/croc-hunter-jenkinsx-serverless-2.git\" @ \"42bb113b55222f56b7fcb479642f5ee8a40a4291\" in path \"/workspace\""}
Step: build-step-jenkins:

Picked up _JAVA_OPTIONS: -Xmx400m
Started
Running in Durability level: PERFORMANCE_OPTIMIZED
  22.827 [id=25]	WARNING	i.f.k.c.i.VersionUsageUtils#alert: The client is using resource type 'customresourcedefinitions' with unstable version 'v1beta1'
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /tmp/jenkinsTests.tmp/jenkins8365397186951666535test/workspace/job
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
[Pipeline] }
[Pipeline] // stage
[Pipeline] withCredentials
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (CI Build and push snapshot)
[Pipeline] withEnv
[Pipeline] {
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/carlossg/croc-hunter-jenkinsx-serverless
[Pipeline] {
[Pipeline] checkout
[Pipeline] sh
+ make VERSION=0.0.0-SNAPSHOT-PR-11-4 GIT_COMMIT=42bb113b55222f56b7fcb479642f5ee8a40a4291 linux
cp skaffold.yaml skaffold.yaml.new
sed -i -e "s/{{.VERSION}}/0.0.0-SNAPSHOT-PR-11-4/" skaffold.yaml.new
sed -i -e "s/{{.GIT_COMMIT}}/42bb113b55222f56b7fcb479642f5ee8a40a4291/" skaffold.yaml.new
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/croc-hunter-jenkinsx croc-hunter.go
[Pipeline] sh
+ export VERSION=0.0.0-SNAPSHOT-PR-11-4
+ skaffold build -f skaffold.yaml.new
time="2019-04-07T17:43:43Z" level=warning msg="config version (skaffold/v1beta1) out of date: upgrading to latest (skaffold/v1beta6)"
Generating Tag for [changeme]...
Starting build...
Building [changeme]...
Sending build context to Docker daemon  525.8kBSending build context to Docker daemon   6.99MB
Step 1/10 : FROM scratch
 ---> 
Step 2/10 : ARG GIT_SHA
 ---> Using cache
 ---> 094311b0c1e0
Step 3/10 : ARG WORKFLOW_RELEASE
 ---> Using cache
 ---> 2bfca776902d
Step 4/10 : ENV GIT_SHA $GIT_SHA
 ---> Running in d513b7e83ea7
 ---> 324e1689e607
Step 5/10 : ENV WORKFLOW_RELEASE $WORKFLOW_RELEASE
 ---> Running in 9790367ec565
 ---> 8b101d34f83c
Step 6/10 : ENV POWERED_BY Jenkins-X
 ---> Running in 2f20f4016f7e
 ---> ad839c89acdc
Step 7/10 : EXPOSE 8080
 ---> Running in 7eab7ccabfb3
 ---> da26e08a3199
Step 8/10 : ENTRYPOINT /croc-hunter-jenkinsx
 ---> Running in 1d71fc48434c
 ---> 6de80b9a491e
Step 9/10 : COPY ./bin/ /
 ---> b0bcb4beb1d4
Step 10/10 : COPY static/ static/
 ---> a815f483bda9
Successfully built a815f483bda9
The push refers to a repository [10.47.240.112:5000/carlossg/croc-hunter-jenkinsx]
ceb338d30f6d: Preparing
cf0081f27ce7: Preparing
ceb338d30f6d: Pushed
cf0081f27ce7: Pushed
0.0.0-SNAPSHOT-PR-11-4: digest: sha256:7dcc7e448964d78d2d4d0761d054ea3810c06b8f0c20dac3b5cb20d55f96f4b0 size: 738
Build complete in 2.350761625s
Starting test...
Test complete in 6.581Âµs
changeme -> 10.47.240.112:5000/carlossg/croc-hunter-jenkinsx:0.0.0-SNAPSHOT-PR-11-4@sha256:7dcc7e448964d78d2d4d0761d054ea3810c06b8f0c20dac3b5cb20d55f96f4b0
[Pipeline] sh
+ jx step validate --min-jx-version 1.2.36
[Pipeline] sh
+ jx step post build --image 10.47.240.112:5000/carlossg/croc-hunter-jenkinsx:0.0.0-SNAPSHOT-PR-11-4
[Pipeline] }
[Pipeline] // dir
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/carlossg/croc-hunter-jenkinsx-serverless/charts/preview
[Pipeline] {
[Pipeline] sh
+ make preview
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-11-4/" Chart.yaml
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-11-4/" ../*/Chart.yaml
sed -i -e "s|repository: .*|repository: 10.47.240.112:5000\/carlossg\/golang-http|" values.yaml
sed -i -e "s/tag: .*/tag: 0.0.0-SNAPSHOT-PR-11-4/" values.yaml
echo "  version: 0.0.0-SNAPSHOT-PR-11-4" >> requirements.yaml
jx step helm build
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x http://chartmuseum.jenkins-x.io
Successfully added Helm repository jenkins-x.
Adding missing Helm repo: releases http://jenkins-x-chartmuseum:8080
Successfully added Helm repository releases.
Adding missing Helm repo: repo5 https://chartmuseum.build.cd.jenkins-x.io
Successfully added Helm repository repo5.
[Pipeline] sh
+ jx preview --app croc-hunter-jenkinsx --dir ../..
Creating a preview
Commit author email is empty for: 42bb113b55222f56b7fcb479642f5ee8a40a4291
Looking for commits in: /home/jenkins/go/src/github.com/carlossg/croc-hunter-jenkinsx-serverless/
Found commit author match for: carlossg with email address: carlos@apache.org
expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    domain: eu.g.csanchez.org
    exposer: Ingress
    http: "true"
preview:
  image:
    repository: 10.47.240.112:5000/carlossg/croc-hunter-jenkinsx
    tag: 0.0.0-SNAPSHOT-PR-11-4
Failed to update PipelineActivities carlossg-croc-hunter-jenkinsx-serverless-2-pr-11-4: the namespace of the object (jx-carlossg-croc-hunter-jenkinsx-serverless-2-pr-11) does not match the namespace on the request (jx)
Preview application is now available at: http://croc-hunter-jenkinsx.jx-carlossg-croc-hunter-jenkinsx-serverless-2-pr-11.eu.g.csanchez.org

[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Release)
Stage "Build Release" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Promote to Environments)
Stage "Promote to Environments" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
